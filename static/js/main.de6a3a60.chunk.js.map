{"version":3,"sources":["Components/todohead.js","Containers/todolist.js","App.js","index.js"],"names":["TodoHead","react_default","a","createElement","className","style","marginRight","ToDoList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","name","target","value","setState","defineProperty","submitNote","newNote","todo","state","estTime","time","startTime","endTime","notes","concat","toConsumableArray","getTimeMilli","Date","getTime","getFormatTime","timiInMilliseconds","toISOString","substr","start","map","el","i","assign","end","alert","_this2","element","index","key","textAlign","width","type","variant","color","onClick","placeholder","onChange","min","trim","Number","title","disabled","length","marginTop","todohead","React","Component","App","todolist","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.de6a3a60.chunk.js","sourcesContent":["import React from 'react'\n\nconst TodoHead = () => {\n    return (\n        <thead >\n            <tr >\n                <th> <span className=\"icon-question-circle1\" style={{ marginRight: \"2px\" }} />ToDo</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />Estimated Time(minutes)</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />Start Time(HH:MM:SS)</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />End Time(HH:MM:SS)</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />Total Time(HH:MM:SS)</th>\n            </tr>\n        </thead>\n    )\n}\n\nexport default TodoHead;","import React from 'react'\nimport '../Styles/App.css'\nimport TodoHead from '../Components/todohead'\n\nclass ToDoList extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            todo: '',\n            time: '',\n            notes: [],\n        }\n    }\n\n    //On Handling Input Boxes\n    handleInput = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    //Onclicking Submit Button\n    submitNote = () => {\n        let newNote = {\n            todo: this.state.todo,\n            estTime: this.state.time,\n            startTime: 0,\n            endTime: 0\n        }\n        this.setState({\n            notes : [...this.state.notes, newNote],\n            todo : '',\n            time : ''\n        })\n    }\n\n    //Getting current time in milliseconds\n    getTimeMilli = () => {\n        var d = new Date();\n        return d.getTime();\n    }\n\n    //Getting Current time in format HH:MM:SS\n    getFormatTime = (timiInMilliseconds) => {\n        return new Date(timiInMilliseconds).toISOString().substr(11,8)\n    }\n\n    //Onclick Of starting a ToDO\n    start = (e) => {\n        let time = this.getTimeMilli();\n        this.setState({\n            notes: this.state.notes.map((el, i) => (i == e.target.name ? Object.assign({}, el, { startTime: time }) : el))\n        })\n    }\n\n    //Onclick of ending the ToDO\n    end = (e) => {\n        let time = this.getTimeMilli();\n        if (this.state.notes[e.target.name].startTime != 0) {\n            this.setState({\n                notes: this.state.notes.map((el, i) => (i == e.target.name ? Object.assign({}, el, { endTime: time }) : el))\n            })\n        }\n        else {\n            alert(\"Please Start the task first\")\n        }\n    }\n\n\n    render() {\n        const todo = this.state.notes.map((element, index) => {\n            return (\n                <tr key={index}>\n                    \n                    <td style={{ textAlign: \"center\" }}>{element.todo}</td>\n\n                    <td style={{ textAlign: \"center\" }}>{element.estTime}</td>\n\n                    {\n                    this.state.notes[index].startTime === 0 ? \n                    <td style={{ textAlign: \"center\" }}>\n                         <div style={{ width: \"100%\" }}>\n                            <button name={index} className=\"btn btn-primary btn-sm\" type=\"button\" variant=\"contained\" color=\"primary\" onClick={(e) => this.start(e)}>Start</button>\n                        </div>\n                    </td> \n                    : \n                    <td style={{ textAlign: \"center\" }}>{this.getFormatTime(this.state.notes[index].startTime)}</td>\n                    }\n\n                    {\n                    this.state.notes[index].endTime === 0 ? \n                    <td style={{ textAlign: \"center\" }}>\n                        <div style={{ width: \"100%\" }}> \n                            <button name={index} className=\"btn btn-primary btn-sm\" type=\"button\" variant=\"contained\" color=\"primary\" onClick={(e) => this.end(e)}>End</button> \n                        </div>\n                    </td> \n                    : \n                    <td style={{ textAlign: \"center\" }}>{this.getFormatTime(this.state.notes[index].endTime)}</td>\n                    }\n\n                    {\n                    this.state.notes[index].endTime !== 0 ? \n                    <td style={{ textAlign: \"center\" }}>{this.getFormatTime(this.state.notes[index].endTime - this.state.notes[index].startTime)}</td> \n                    : \n                    <td style={{ textAlign: \"center\" }}>--:--:--</td>\n                    }\n\n                </tr>\n            )\n        })\n\n        return (\n            <div className=\"container\">\n                <div className=\"scores-block1 clearfix\">\n                    <div className=\"bg-white shadow-sm Assessment_Results\">\n                        <div style={{ textAlign: \"center\" }}>\n                                <div className=\"form-group row\" >\n                                    <label className=\"col-sm-3 col-form-label\">Todo :  </label>\n                                    <div className=\"col-sm-6\">\n                                        <input className=\"form-control\" type=\"text\" name=\"todo\" placeholder=\"Add Todo\" onChange={(e) => { this.handleInput(e) }} value={this.state.todo} />\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 col-form-label\">Estimated Time (minutes) : </label>\n                                    <div className=\"col-sm-6\">\n                                        <input className=\"form-control\" type=\"number\" min=\"0\" name=\"time\" placeholder=\"Estimated time\" onChange={(e) => { this.handleInput(e) }} value={this.state.time} />\n                                    </div>\n                                </div>\n                                {this.state.todo.trim() === '' || this.state.time.trim() === '' || Number(this.state.time.trim()) <= 0 ?\n                                    <button title=\"Please add todo and valid estimated time\" disabled className=\"btn btn-lg\" type=\"button\" variant=\"contained\" >\n                                        Submit\n                                    </button>\n                                    : <button onClick={this.submitNote} className=\"btn btn-primary btn-lg\" type=\"button\" variant=\"contained\" color=\"primary\">\n                                        Submit\n                                    </button>\n                                }\n                        </div>\n                        {\n                        this.state.notes.length !== 0 && \n                        <table className=\"table\" style={{ marginTop: \"2rem\" }}>\n                           <TodoHead />\n                            <tbody >\n                                {todo}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoList;","import React, { Component } from 'react';\nimport ToDoList from './Containers/todolist'\n\nclass App extends Component {\n  render() {\n    return (\n      <ToDoList/>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}