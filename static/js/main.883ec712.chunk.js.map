{"version":3,"sources":["Components/todohead.js","Components/todoInput.js","Components/todoRows.js","Containers/todolist.js","App.js","index.js"],"names":["TodoHead","react_default","a","createElement","className","style","marginRight","TodoInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","e","name","target","value","setState","defineProperty","resetState","todo","time","state","_this2","textAlign","type","placeholder","onChange","min","trim","Number","title","disabled","variant","onClick","props","submitNote","color","React","Component","getFormatTime","timiInMilliseconds","Date","toISOString","substr","todoRows","element","estTime","todoRows_this","notes","index","startTime","width","start","endTime","end","ToDoList","newNote","concat","toConsumableArray","getTimeMilli","getTime","map","el","i","assign","alert","Components_todoRows","key","todoInput","length","marginTop","todohead","App","todolist","ReactDOM","render","src_App","document","getElementById"],"mappings":"uOAgBeA,SAdE,WACb,OACIC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBC,MAAO,CAAEC,YAAa,SAAnE,QACAL,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaC,MAAO,CAAEC,YAAa,SAAxD,2BACAL,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaC,MAAO,CAAEC,YAAa,SAAxD,wBACAL,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaC,MAAO,CAAEC,YAAa,SAAxD,sBACAL,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaC,MAAO,CAAEC,YAAa,SAAxD,mCCmDDC,cAzDX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QASJI,YAAc,SAACC,GACX,IAAIC,EAAOD,EAAEE,OAAOD,KAChBE,EAAQH,EAAEE,OAAOC,MAErBX,EAAKY,SAALX,OAAAY,EAAA,EAAAZ,CAAA,GACKQ,EAAOE,KAfFX,EAqBdc,WAAa,WACTd,EAAKY,SAAS,CACVG,KAAM,GACNC,KAAO,MAtBXhB,EAAKiB,MAAQ,CACTF,KAAM,GACNC,KAAM,IAJAhB,wEA4BL,IAAAkB,EAAAf,KACL,OACIV,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEsB,UAAW,WACrB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BAAjB,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAewB,KAAK,OAAOX,KAAK,OAAOY,YAAY,WAAWC,SAAU,SAACd,GAAQU,EAAKX,YAAYC,IAAMG,MAAOR,KAAKc,MAAMF,SAGnJtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BAAjB,+BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAewB,KAAK,SAASG,IAAI,IAAId,KAAK,OAAOY,YAAY,iBAAiBC,SAAU,SAACd,GAAQU,EAAKX,YAAYC,IAAMG,MAAOR,KAAKc,MAAMD,SAGvI,KAA3Bb,KAAKc,MAAMF,KAAKS,QAA4C,KAA3BrB,KAAKc,MAAMD,KAAKQ,QAAiBC,OAAOtB,KAAKc,MAAMD,KAAKQ,SAAW,EACjG/B,EAAAC,EAAAC,cAAA,UAAQ+B,MAAM,2CAA2CC,UAAQ,EAAC/B,UAAU,aAAawB,KAAK,SAASQ,QAAQ,aAA/G,UAGEnC,EAAAC,EAAAC,cAAA,UAAQkC,QAAS,SAACrB,GAAKU,EAAKY,MAAMC,WAAWvB,EAAEU,EAAKD,MAAMF,KAAMG,EAAKD,MAAMD,MAAOE,EAAKJ,cAAgBlB,UAAU,yBAAyBwB,KAAK,SAASQ,QAAQ,YAAYI,MAAM,WAAlL,kBAhDEC,IAAMC,oBC2CxBC,EAAgB,SAACC,GACnB,OAAO,IAAIC,KAAKD,GAAoBE,cAAcC,OAAO,GAAG,IAIjDC,EAhDE,SAACV,GAEd,OACIrC,EAAAC,EAAAC,cAAA,UAEAF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WAAaW,EAAMW,QAAQ1B,MAEnDtB,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WAAaW,EAAMW,QAAQC,SAGP,IAA5CC,EAAKb,MAAMc,MAAMd,EAAMe,OAAOC,UAC9BrD,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WACnB1B,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEkD,MAAO,SAClBtD,EAAAC,EAAAC,cAAA,UAAQc,KAAMqB,EAAMe,MAAOjD,UAAU,yBAAyBwB,KAAK,SAASQ,QAAQ,YAAYI,MAAM,UAAUH,QAAS,SAACrB,GAAD,OAAOmC,EAAKb,MAAMkB,MAAMxC,KAAjJ,WAIRf,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WAAagB,EAAcQ,EAAKb,MAAMc,MAAMd,EAAMe,OAAOC,YAIvC,IAA1CH,EAAKb,MAAMc,MAAMd,EAAMe,OAAOI,QAC9BxD,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WACpB1B,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEkD,MAAO,SACjBtD,EAAAC,EAAAC,cAAA,UAAQc,KAAMqB,EAAMe,MAAOjD,UAAU,yBAAyBwB,KAAK,SAASQ,QAAQ,YAAYI,MAAM,UAAUH,QAAS,SAACrB,GAAD,OAAOmC,EAAKb,MAAMoB,IAAI1C,KAA/I,SAIRf,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WAAagB,EAAcQ,EAAKb,MAAMc,MAAMd,EAAMe,OAAOI,UAIvC,IAA1CN,EAAKb,MAAMc,MAAMd,EAAMe,OAAOI,QAC9BxD,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WAAagB,EAAcQ,EAAKb,MAAMc,MAAMd,EAAMe,OAAOI,QAAUN,EAAKb,MAAMc,MAAMd,EAAMe,OAAOC,YAEzHrD,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEsB,UAAW,WAAxB,cCoDOgC,cAnFX,SAAAA,IAAc,IAAAnD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgD,IACVnD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkD,GAAA7C,KAAAH,QAOJ4B,WAAa,SAACvB,EAAEO,EAAKC,GACjB,IAAIoC,EAAU,CACVrC,KAAMA,EACN2B,QAAS1B,EACT8B,UAAW,EACXG,QAAS,GAEbjD,EAAKY,SAAS,CACVgC,MAAK,GAAAS,OAAApD,OAAAqD,EAAA,EAAArD,CAAOD,EAAKiB,MAAM2B,OAAlB,CAAyBQ,OAhBxBpD,EAqBduD,aAAe,WAEX,OADQ,IAAIlB,MACHmB,WAvBCxD,EA4BdgD,MAAQ,SAACxC,GACL,IAAIQ,EAAOhB,EAAKuD,eAChBvD,EAAKY,SAAS,CACVgC,MAAO5C,EAAKiB,MAAM2B,MAAMa,IAAI,SAACC,EAAIC,GAAL,OAAYA,GAAKnD,EAAEE,OAAOD,KAAOR,OAAO2D,OAAO,GAAIF,EAAI,CAAEZ,UAAW9B,IAAU0C,OA/BpG1D,EAoCdkD,IAAM,SAAC1C,GACH,IAAIQ,EAAOhB,EAAKuD,eACiC,GAA7CvD,EAAKiB,MAAM2B,MAAMpC,EAAEE,OAAOD,MAAMqC,UAChC9C,EAAKY,SAAS,CACVgC,MAAO5C,EAAKiB,MAAM2B,MAAMa,IAAI,SAACC,EAAIC,GAAL,OAAYA,GAAKnD,EAAEE,OAAOD,KAAOR,OAAO2D,OAAO,GAAIF,EAAI,CAAET,QAASjC,IAAU0C,MAI5GG,MAAM,gCA1CV7D,EAAKiB,MAAQ,CACT2B,MAAO,IAHD5C,wEAiDL,IAAAkB,EAAAf,KACCY,EAAOZ,KAAKc,MAAM2B,MAAMa,IAAI,SAAChB,EAASI,GACxC,OACIpD,EAAAC,EAAAC,cAACmE,EAAD,CAAUC,IAAOlB,EACjBJ,QAAWA,EACXI,MAAOA,EACPD,MAAO1B,EAAKD,MAAM2B,MAClBI,MAAO,SAACxC,GAAKU,EAAK8B,MAAMxC,IACxB0C,IAAM,SAAC1C,GAAKU,EAAKgC,IAAI1C,QAK7B,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACXH,EAAAC,EAAAC,cAACqE,EAAD,CAAWjC,WAAc,SAACvB,EAAEO,EAAKC,GAAR,OAAeE,EAAKa,WAAWvB,EAAEO,EAAKC,MAEnC,IAA5Bb,KAAKc,MAAM2B,MAAMqB,QACjBxE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQC,MAAO,CAAEqE,UAAW,SAC1CzE,EAAAC,EAAAC,cAACwE,EAAD,MACC1E,EAAAC,EAAAC,cAAA,aACKoB,cAzEVkB,IAAMC,WCKdkC,mLANX,OACE3E,EAAAC,EAAAC,cAAC0E,EAAD,aAHYnC,aCClBoC,IAASC,OAAO9E,EAAAC,EAAAC,cAAC6E,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.883ec712.chunk.js","sourcesContent":["import React from 'react'\n\nconst TodoHead = () => {\n    return (\n        <thead >\n            <tr >\n                <th> <span className=\"icon-question-circle1\" style={{ marginRight: \"2px\" }} />ToDo</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />Estimated Time(minutes)</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />Start Time(HH:MM:SS)</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />End Time(HH:MM:SS)</th>\n                <th> <span className=\"icon-clock\" style={{ marginRight: \"2px\" }} />Total Time(HH:MM:SS)</th>\n            </tr>\n        </thead>\n    )\n}\n\nexport default TodoHead;","import React from 'react'\n\n\nclass TodoInput extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            todo: '',\n            time: ''\n        }\n    }\n\n\n    //On Handling Input Boxes\n    handleInput = (e) => {\n        let name = e.target.name;\n        let value = e.target.value;\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n    //reset States on SubmitTodo\n    resetState = () => {\n        this.setState({\n            todo: '',\n            time : ''\n        })\n    }\n    \n    render() {\n        return (\n            <div style={{ textAlign: \"center\" }}>\n                <div className=\"form-group row\" >\n                    <label className=\"col-sm-3 col-form-label\">Todo :  </label>\n                    <div className=\"col-sm-6\">\n                        <input className=\"form-control\" type=\"text\" name=\"todo\" placeholder=\"Add Todo\" onChange={(e) => { this.handleInput(e) }} value={this.state.todo} />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-sm-3 col-form-label\">Estimated Time (minutes) : </label>\n                    <div className=\"col-sm-6\">\n                        <input className=\"form-control\" type=\"number\" min=\"0\" name=\"time\" placeholder=\"Estimated time\" onChange={(e) => { this.handleInput(e) }} value={this.state.time} />\n                    </div>\n                </div>\n                {this.state.todo.trim() === '' || this.state.time.trim() === '' || Number(this.state.time.trim()) <= 0 ?\n                    <button title=\"Please add todo and valid estimated time\" disabled className=\"btn btn-lg\" type=\"button\" variant=\"contained\" >\n                        Submit\n                                    </button>\n                    : <button onClick={(e)=>{this.props.submitNote(e,this.state.todo, this.state.time); this.resetState();}} className=\"btn btn-primary btn-lg\" type=\"button\" variant=\"contained\" color=\"primary\">\n                        Submit\n                    </button>\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default TodoInput;","import React from 'react'\n\n\nconst todoRows = (props) => {\n\n    return(\n        <tr>\n                    \n        <td style={{ textAlign: \"center\" }}>{props.element.todo}</td>\n\n        <td style={{ textAlign: \"center\" }}>{props.element.estTime}</td>\n\n        {\n        this.props.notes[props.index].startTime === 0 ? \n        <td style={{ textAlign: \"center\" }}>\n             <div style={{ width: \"100%\" }}>\n                <button name={props.index} className=\"btn btn-primary btn-sm\" type=\"button\" variant=\"contained\" color=\"primary\" onClick={(e) => this.props.start(e)}>Start</button>\n            </div>\n        </td> \n        : \n        <td style={{ textAlign: \"center\" }}>{getFormatTime(this.props.notes[props.index].startTime)}</td>\n        }\n\n        {\n        this.props.notes[props.index].endTime === 0 ? \n        <td style={{ textAlign: \"center\" }}>\n            <div style={{ width: \"100%\" }}> \n                <button name={props.index} className=\"btn btn-primary btn-sm\" type=\"button\" variant=\"contained\" color=\"primary\" onClick={(e) => this.props.end(e)}>End</button> \n            </div>\n        </td> \n        : \n        <td style={{ textAlign: \"center\" }}>{getFormatTime(this.props.notes[props.index].endTime)}</td>\n        }\n\n        {\n        this.props.notes[props.index].endTime !== 0 ? \n        <td style={{ textAlign: \"center\" }}>{getFormatTime(this.props.notes[props.index].endTime - this.props.notes[props.index].startTime)}</td> \n        : \n        <td style={{ textAlign: \"center\" }}>--:--:--</td>\n        }\n\n    </tr>\n    )\n}\n\n//Getting Current time in format HH:MM:SS\nconst getFormatTime = (timiInMilliseconds) => {\n    return new Date(timiInMilliseconds).toISOString().substr(11,8)\n}\n\n\nexport default todoRows;","import React from 'react'\nimport '../Styles/App.css'\nimport TodoHead from '../Components/todohead'\nimport TodoInput from '../Components/todoInput'\nimport TodoRows from '../Components/todoRows'\n\nclass ToDoList extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            notes: [],\n        }\n    }\n\n    //Onclicking Submit Button\n    submitNote = (e,todo,time) => {\n        let newNote = {\n            todo: todo,\n            estTime: time,\n            startTime: 0,\n            endTime: 0\n        }\n        this.setState({\n            notes : [...this.state.notes, newNote]\n        })\n    }\n\n    //Getting current time in milliseconds\n    getTimeMilli = () => {\n        var d = new Date();\n        return d.getTime();\n    }\n\n\n    //Onclick Of starting a ToDO\n    start = (e) => {\n        let time = this.getTimeMilli();\n        this.setState({\n            notes: this.state.notes.map((el, i) => (i == e.target.name ? Object.assign({}, el, { startTime: time }) : el))\n        })\n    }\n\n    //Onclick of ending the ToDO\n    end = (e) => {\n        let time = this.getTimeMilli();\n        if (this.state.notes[e.target.name].startTime != 0) {\n            this.setState({\n                notes: this.state.notes.map((el, i) => (i == e.target.name ? Object.assign({}, el, { endTime: time }) : el))\n            })\n        }\n        else {\n            alert(\"Please Start the task first\")\n        }\n    }\n\n\n    render() {\n        const todo = this.state.notes.map((element, index) => {\n            return (\n                <TodoRows key = {index} \n                element = {element} \n                index={index} \n                notes={this.state.notes} \n                start={(e)=>{this.start(e)}} \n                end ={(e)=>{this.end(e)}}\n                />\n            )\n        })\n\n        return (\n            <div className=\"container\">\n                <div className=\"scores-block1 clearfix\">\n                    <div className=\"bg-white shadow-sm Assessment_Results\">\n                        <TodoInput submitNote = {(e,todo,time)=>this.submitNote(e,todo,time)}/>\n                        {\n                        this.state.notes.length !== 0 && \n                        <table className=\"table\" style={{ marginTop: \"2rem\" }}>\n                           <TodoHead />\n                            <tbody >\n                                {todo}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDoList;","import React, { Component } from 'react';\nimport ToDoList from './Containers/todolist'\n\nclass App extends Component {\n  render() {\n    return (\n      <ToDoList/>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}